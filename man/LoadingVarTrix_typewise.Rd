% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LoadingVarTrix_typewise.R
\name{LoadingVarTrix_typewise}
\alias{LoadingVarTrix_typewise}
\title{LoadingVarTrix_typewise}
\usage{
LoadingVarTrix_typewise(
  samples_file,
  samples_path = NULL,
  barcodes_path = NULL,
  snp_path = NULL,
  vcf_path,
  patient,
  patient_column = "patient",
  type_use = "scRNAseq_Somatic",
  min_reads = NULL,
  min_cells = 2,
  cells_include = NULL,
  cells_exclude = NULL,
  cellbarcode_length = 18,
  verbose = TRUE
)
}
\arguments{
\item{samples_file}{Path to the csv file with the samples to be loaded.}

\item{samples_path}{Path to the input folder. Must include a barcodes file.}

\item{barcodes_path}{The path to the cell barcodes tsv. Default = NULL}

\item{snp_path}{Path to the SNP file used for VarTrix (SNV.loci.txt).}

\item{vcf_path}{Path to the VCF file with the variants.}

\item{patient}{The patient you want to load.}

\item{patient_column}{The column that contains the patient information. Use merge, if all samples should be merged.}

\item{type_use}{The type of input. Only rows that have the specified type will be loaded.}

\item{min_reads}{The minimum number of reads we want. Otherwise we treat this as a NoCall. Default = NULL.}

\item{min_cells}{The minimum number of cells for a variant. Otherwise, we will remove a variant. Default = 2.}

\item{cells_include}{A vector of cell barcodes. Only these cells will be retained.}

\item{cells_exclude}{A vector of cell barcodes. These cells will be removed from the output.}

\item{cellbarcode_length}{The length of the cell barcode. This should be the length of the actual barcode plus two for the suffix (-1). Default = 18}

\item{verbose}{Should the function be verbose? Default = TRUE}
}
\description{
When we load all the different types of results (scRNAseq/amplicon and MT/amplicon),
we might need extreme amounts of memory. To solve this issue, I will load each type separately.
In a following function (AmpliconSupplementing), we can add the amplicon information to the
scRNAseq information.
The input file is a specifically formatted csv file with all the necessary information to run the analysis.
Note that the source column in the input file needs to be vartrix for this function.
This is hard coded and case insensitive.
}
